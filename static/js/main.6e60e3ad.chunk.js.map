{"version":3,"sources":["asset/images/cnode.svg","component/Header/index.js","component/Loading/index.js","utils/convertTime.js","component/Main/ListItem/index.js","component/Main/index.js","component/Post/index.js","component/User/index.js","App.js","index.js"],"names":["module","exports","Header","props","className","to","src","logo","alt","href","target","rel","onClick","e","preventDefault","Loading","convert","time","diff","Date","now","d","parseInt","getFullYear","getMonth","getDate","ListItem","data","map","key","id","author","loginname","avatar_url","title","reply_count","visit_count","top","good","item","tab","getTabText","last_reply_at","Main","useState","setTab","page","setPage","setData","useEffect","fetchTopicData","a","fetch","then","res","json","result","handleSetPage","command","handleChangePage","Post","match","params","topicData","setTopicData","userData","setUserData","topicResult","fetchUserData","userResult","create_at","dangerouslySetInnerHTML","__html","content","replies","length","index","score","recent_topics","User","userName","name","githubUsername","recent_replies","App","exact","path","component","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e60e3ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cnode.2380f055.svg\";","import React from 'react';\r\nimport logo from '../../asset/images/cnode.svg';\r\nimport './index.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className='logo'>\r\n                <Link to='/'>\r\n                    <img src={logo} alt='logo' />\r\n                </Link>\r\n            </div>\r\n            <div className=\"navbar\">\r\n                <Link to='/'>首页</Link>\r\n                <a href='https://cnodejs.org/getstart' target='_blank' rel=\"noopener noreferrer\" >新手入门</a>\r\n                <a href='https://cnodejs.org/api' target='_black' rel=\"noopener noreferrer\">API</a>\r\n                <a href='/' onClick={e => e.preventDefault()}>关于</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './index.scss';\r\n\r\nconst Loading = props => {\r\n    return (\r\n        <div className='loading'></div>\r\n    );\r\n}\r\n\r\nexport default Loading;","//将时间转换成形如刚刚、x分钟前、x小时前、x天前、x月前、x年前的字符串\r\nconst convert = (time) => {\r\n    let diff = Date.now() - new Date(time);\r\n    let d = new Date(diff);\r\n    return diff <= 60000 ? '刚刚' :  //60秒内\r\n        diff <= 3600000 ? `${parseInt(diff / 60000)}分钟前` :  //60分钟内\r\n        diff <= 86400000 ? `${parseInt(diff / 3600000)}小时前` :  //24小时内\r\n        d.getFullYear() > 1970 ? `${d.getFullYear() - 1970}年前` :\r\n        d.getMonth() ? `${d.getMonth()}个月前` : `${d.getDate() - 1}天前`;\r\n}\r\n\r\nexport default convert;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\nimport Loading from '../../Loading';\r\nimport convert from '../../../utils/convertTime';\r\n\r\nconst ListItem = props => {\r\n    //每个帖子显示的标签内容\r\n    const getTabText = item => {\r\n        if (item.top) {\r\n            return '置顶';\r\n        }\r\n        if (item.good) {\r\n            return '精华';\r\n        }\r\n        switch (item.tab) {\r\n            case 'ask':\r\n                return '问答';\r\n            case 'share':\r\n                return '分享';\r\n            case 'job':\r\n                return '招聘';\r\n            default: \r\n                return '';\r\n        }\r\n    }\r\n\r\n    //等待数据加载\r\n    if (!props.data) {\r\n        return <Loading />;\r\n    }\r\n\r\n    return (\r\n        <div className='list-item'>\r\n            <div className='list'>\r\n                {props.data.map(e =>\r\n                    <div className='cell' key={e.id}>\r\n                        <Link to={`/user/${e.author.loginname}`}>\r\n                            <img className='user-avatar' src={e.author.avatar_url} title={e.author.loginname} alt='' />\r\n                        </Link>\r\n                        <div className='cell-left'>\r\n                            <span className='reply-count'>{e.reply_count}</span>\r\n                            <span>/</span>\r\n                            <span className='visit-count'>{e.visit_count}</span>\r\n                        </div>\r\n                        <span className={e.top || e.good ? 'put-top' : 'list-tab'}>{getTabText(e)}</span>\r\n                        <span className='title'><Link to={`/post/${e.id}`}>{e.title}</Link></span>\r\n                        <span className='time'>{convert(e.last_reply_at)}</span>\r\n                    </div>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListItem;","import React, { useEffect, useState } from 'react';\r\nimport './index.scss';\r\nimport ListItem from './ListItem';\r\n\r\nconst API_URL = 'https://cnodejs.org/api/v1/topics?limit=20';\r\n\r\nconst Main = props => {\r\n    const [tab, setTab] = useState('all');  //标签\r\n    const [page, setPage] = useState(1);  //页数\r\n    const [data, setData] = useState(null);  //帖子数据\r\n\r\n    //获取数据\r\n    useEffect(() => {\r\n        const fetchTopicData = async () => {\r\n            const result = await fetch(`${API_URL}&page=${page}&tab=${tab}`).then(res => res.json());\r\n            setData(result.data);\r\n        }\r\n        \r\n        setData(null);\r\n        fetchTopicData();\r\n    },\r\n        [tab, page]\r\n    );\r\n\r\n    //设置页数\r\n    const handleSetPage = command => {\r\n        if (command === 'next') {\r\n            setPage(page + 1);\r\n        } else if (page > 1) {\r\n            setPage(page - 1);\r\n        }\r\n    }\r\n\r\n    //切换标签\r\n    const handleChangePage = tab => {\r\n        setTab(tab);\r\n        setPage(1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"tab\">\r\n                <span \r\n                    className={tab === 'all' ? 'item high-light' : 'item'}\r\n                    onClick={() => handleChangePage('all')}>全部</span>\r\n                <span\r\n                    className={tab === 'good' ? 'item high-light' : 'item'}\r\n                    onClick={() => handleChangePage('good')}>精华</span>\r\n                <span\r\n                    className={tab === 'share' ? 'item high-light' : 'item'}\r\n                    onClick={() => handleChangePage('share')}>分享</span>\r\n                <span\r\n                    className={tab === 'ask' ? 'item high-light' : 'item'}\r\n                    onClick={() => handleChangePage('ask')}>问答</span>\r\n                <span\r\n                    className={tab === 'job' ? 'item high-light' : 'item'}\r\n                    onClick={() => handleChangePage('job')}>招聘</span>\r\n            </div>\r\n            <ListItem data={data} />\r\n            {\r\n                data &&\r\n                <div className='page'>\r\n                    <button onClick={() => handleSetPage('prev')}>{`<<Prev`}</button>\r\n                    <button onClick={() => handleSetPage('next')}>{`Next>>`}</button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Main;","import React, { useEffect, useState } from 'react';\r\nimport './index.scss';\r\nimport Loading from '../Loading';\r\nimport convert from '../../utils/convertTime';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst API_URL_TOPIC = 'https://cnodejs.org/api/v1/topic/';  //帖子API\r\nconst API_URL_USER = 'https://cnodejs.org/api/v1/user/'; //用户API\r\n\r\nconst Post = props => {\r\n    const id = props.match.params.id;  //帖子id\r\n    const [topicData, setTopicData] = useState(null);  //帖子数据\r\n    const [userData, setUserData] = useState(null);  //用户数据\r\n\r\n    //获取帖子数据\r\n    useEffect(() => {\r\n        const fetchTopicData = async () => {\r\n            const topicResult = await fetch(`${API_URL_TOPIC}${id}`).then(res => res.json());\r\n            setTopicData(topicResult.data);\r\n        }\r\n\r\n        setTopicData(null);\r\n        fetchTopicData();\r\n    },\r\n        [id]\r\n    );\r\n\r\n    //获取用户数据\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            if (topicData) {\r\n                const userResult = await fetch(`${API_URL_USER}${topicData.author.loginname}`).then(res => res.json());\r\n                setUserData(userResult.data);\r\n            }\r\n        }\r\n\r\n        setUserData(null);\r\n        fetchUserData();\r\n    },\r\n        [topicData]\r\n    );\r\n\r\n    //等待加载数据\r\n    if (!topicData || !userData) {\r\n        return <Loading />;\r\n    }\r\n\r\n    return (\r\n        <div className='post'>\r\n            <div className='panel'>\r\n                <div className='panel-top'>\r\n                    <div className='title'>{topicData.title}</div>\r\n                    <div className='changes'>\r\n                        <span>发布于{`${convert(topicData.create_at)}`}</span>\r\n                        <span><Link to={`/user/${topicData.author.loginname}`}>作者{`${topicData.author.loginname}`}</Link></span>\r\n                        <span>{`${topicData.visit_count}`}次浏览</span>\r\n                    </div>\r\n                    <div className='content' dangerouslySetInnerHTML={{ __html: topicData.content }}></div>\r\n                </div>\r\n                <div className='panel-bottom'>\r\n                    <header className='reply-header'>{`${topicData.replies.length}`}回复</header>\r\n\r\n                    {topicData.replies.map((e, index) =>\r\n                        <div className='reply' key={index}>\r\n                            <div className='reply-author'>\r\n                                <Link to={`/user/${e.author.loginname}`}><img src={e.author.avatar_url} alt={`${e.author.loginname}`} /></Link>\r\n                                <Link to={`/user/${e.author.loginname}`}>{`${e.author.loginname}`}</Link>\r\n                                <span>{` 回复于${convert(e.create_at)}`}</span>\r\n                            </div>\r\n                            <div className='reply-content' dangerouslySetInnerHTML={{ __html: e.content }}></div>\r\n                        </div>)}\r\n\r\n                </div>\r\n            </div>\r\n            <div className='sidebar'>\r\n                <div className='panel'>\r\n                    <div className='panel-top'>\r\n                        <header>作者</header>\r\n                        <div className='info'>\r\n                            <Link to={`/user/${userData.loginname}`}>\r\n                                <img src={`${userData.avatar_url}`} alt={`${userData.loginname}`} />\r\n                                <span>{`${userData.loginname}`}</span>\r\n                            </Link>\r\n                        </div>\r\n                        <div className='score'>{`积分：${userData.score}`}</div>\r\n                        <div className='register-time'>{`注册时间：${convert(userData.create_at)}`}</div>\r\n                    </div>\r\n\r\n                    <div className='panel-bottom'>\r\n                        <header>作者的其他话题</header>\r\n                        <div className='list'>\r\n                            {\r\n                                userData.recent_topics.map((e, index) =>\r\n                                    <div className='item' key={index}>\r\n                                        <Link to={`/post/${e.id}`}>{`${e.title}`}</Link>\r\n                                    </div>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, { useState, useEffect } from 'react';\r\nimport './index.scss';\r\nimport Loading from '../Loading';\r\nimport convert from '../../utils/convertTime';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst API_URL = 'https://cnodejs.org/api/v1/user/';\r\n\r\nconst User = props => {\r\n    const [data, setData] = useState(null);  //用户数据\r\n    const userName = props.match.params.name;  //路由匹配到的用户名\r\n\r\n    //获取数据\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            const result = await fetch(`${API_URL}${userName}`).then(res => res.json());\r\n            setData(result.data);\r\n        }\r\n        setData(null);\r\n        fetchUserData();\r\n    },\r\n        [userName]\r\n    );\r\n\r\n    //等待加载数据\r\n    if (!data) {\r\n        return <Loading />;\r\n    }\r\n\r\n    return (\r\n        <div className='user'>\r\n            <div className='panel'>\r\n                <div className='panel-top'>\r\n                    <header>个人信息</header>\r\n                    <div className='info'>\r\n                        <img src={`${data.avatar_url}`} title={`${data.loginname}`} alt=\"\" />\r\n                        <span>{`${data.loginname}`}</span>\r\n                    </div>\r\n                    <div className='score'>{`积分：${data.score}`}</div>\r\n                    <div className='github'>GitHub:<a href={`https://github.com/${data.githubUsername}`}>{data.githubUsername}</a></div>\r\n                    <div className='register-time'>注册时间：{convert(data.create_at)}</div>\r\n                </div>\r\n                <div className='panel-middle'>\r\n                    <header>最近创建的话题</header>\r\n                    <div className='list'>\r\n                        {data.recent_replies.map((e, index) =>\r\n                            <div className='item' key={index}>\r\n                                <Link to={`/post/${e.id}`}>{e.title}</Link>\r\n                            </div>)}\r\n                    </div>\r\n                </div>\r\n                <div className='panel-bottom'>\r\n                    <header>最近参与的话题</header>\r\n                    <div className='list'>\r\n                        {data.recent_topics.map((e, index) =>\r\n                            <div className='item' key={index}>\r\n                                <Link to={`/post/${e.id}`}>{e.title}</Link>\r\n                            </div>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Header from './component/Header';\r\nimport Main from './component/Main';\r\nimport Post from './component/Post';\r\nimport User from './component/User';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path='/' component={Main} />\r\n          <Route exact path='/post' component={() => <Redirect to='/' />} />\r\n          <Route exact path='/user' component={() => <Redirect to='/' />} />\r\n          <Route path='/post/:id' component={Post} />\r\n          <Route path='/user/:name' component={User} />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}
{"version":3,"sources":["asset/images/cnode.svg","component/Header/index.js","redux/actions.js","component/Loading/index.js","utils/convertTime.js","component/Main/ListItem/index.js","component/Main/index.js","redux/map.js","component/Post/index.js","component/User/index.js","App.js","redux/reducer.js","redux/thunk.js","index.js"],"names":["module","exports","Header","handleAbout","e","preventDefault","className","to","src","logo","alt","href","target","rel","onClick","this","React","Component","getUser","name","dispatch","a","url","fetch","then","response","json","result","type","data","catch","alert","Loading","convert","time","diff","Date","now","d","parseInt","getFullYear","getMonth","getDate","ListItem","getText","obj","top","good","tab","console","log","props","length","map","key","id","author","loginname","avatar_url","title","reply_count","visit_count","last_reply_at","Main","componentDidMount","refreshData","getPost","handleChangeTab","changeTab","page","handleNextPage","getNextPage","handlePrevPage","getPrevPage","Array","isArray","connect","state","ownProps","Post","getPostDetail","match","params","userData","create_at","dangerouslySetInnerHTML","__html","content","replies","score","recent_topics","res","User","githubUsername","recent_replies","App","exact","path","component","initialState","reducer","action","Object","assign","createThunkMiddleware","extraArgument","getState","next","thunk","withExtraArgument","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,mC,sUC6B5BC,G,kNAvBXC,YAAc,SAACC,GACXA,EAAEC,kB,uDAIF,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAMC,GAAG,KACL,yBAAKC,IAAKC,IAAMC,IAAI,WAG5B,yBAAKJ,UAAU,UACX,kBAAC,IAAD,CAAMC,GAAG,KAAT,gBACA,uBAAGI,KAAK,+BAA+BC,OAAO,SAASC,IAAI,uBAA3D,4BACA,uBAAGF,KAAK,0BAA0BC,OAAO,SAASC,IAAI,uBAAtD,OACA,uBAAGF,KAAK,IAAIG,QAASC,KAAKZ,aAA1B,sB,GAjBCa,IAAMC,Y,wCCoBdC,EAAU,SAACC,GACpB,8CAAO,WAAgBC,GAAhB,eAAAC,EAAA,6DACCC,EAAM,mCAAqCH,EAD5C,kBAEII,MAAMD,GACRE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIP,EAAS,CAACQ,KAAM,WAAYC,KAAMF,EAAOE,UACxDC,OAAM,kBAAMC,MAAM,4CALpB,2CAAP,uDCfWC,G,mLANP,OACI,yBAAK1B,UAAU,gB,GAHLU,IAAMC,YCQbgB,EAVC,SAACC,GACb,IAAIC,EAAOC,KAAKC,MAAQ,IAAID,KAAKF,GAC7BI,EAAI,IAAIF,KAAKD,GACjB,OAAOA,GAAQ,IAAQ,eACnBA,GAAQ,KAAR,UAAqBI,SAASJ,EAAO,KAArC,sBACAA,GAAQ,MAAR,UAAsBI,SAASJ,EAAO,MAAtC,sBACAG,EAAEE,cAAgB,KAAlB,UAA4BF,EAAEE,cAAgB,KAA9C,gBACAF,EAAEG,WAAF,UAAkBH,EAAEG,WAApB,gCAAyCH,EAAEI,UAAY,EAAvD,iBCkDOC,E,4MAnDXC,QAAU,SAACC,GACP,GAAIA,EAAIC,IACJ,MAAO,eAEX,GAAID,EAAIE,KACJ,MAAO,eAEX,OAAQF,EAAIG,KACR,IAAK,MACD,MAAO,eACX,IAAK,QACD,MAAO,eACX,IAAK,MACD,MAAO,eACX,QACI,MAAO,K,uDAIT,IAAD,OAGL,OAFAC,QAAQC,IAAInC,KAAKoC,OAEc,IAA3BpC,KAAKoC,MAAMtB,KAAKuB,OAEZ,kBAAC,EAAD,MAKJ,yBAAK9C,UAAU,aACX,yBAAKA,UAAU,QACVS,KAAKoC,MAAMtB,KAAKwB,KAAI,SAAAjD,GAAC,OAClB,yBAAKE,UAAU,OAAOgD,IAAKlD,EAAEmD,IACzB,kBAAC,IAAD,CAAMhD,GAAE,gBAAWH,EAAEoD,OAAOC,YACxB,yBAAKnD,UAAU,cAAcE,IAAKJ,EAAEoD,OAAOE,WAAYC,MAAOvD,EAAEoD,OAAOC,UAAW/C,IAAKN,EAAEoD,OAAOC,aAEpG,yBAAKnD,UAAU,aACX,0BAAMA,UAAU,eAAeF,EAAEwD,aACjC,mCACA,0BAAMtD,UAAU,eAAeF,EAAEyD,cAErC,0BAAMvD,UAAWF,EAAE0C,KAAO1C,EAAE2C,KAAO,UAAY,YAAa,EAAKH,QAAQxC,IACzE,0BAAME,UAAU,SAAQ,kBAAC,IAAD,CAAMC,GAAE,gBAAWH,EAAEmD,KAAOnD,EAAEuD,QACtD,0BAAMrD,UAAU,QAAQ2B,EAAQ7B,EAAE0D,0B,GA5CvC9C,IAAMC,WCCvB8C,E,4MAEFC,kB,sBAAoB,sBAAA3C,EAAA,sEACV,EAAK8B,MAAMc,cADD,uBAEV,EAAKd,MAAMe,UAFD,2C,EAMpBC,gBAAkB,SAACnB,GACX,EAAKG,MAAMH,MAAQA,IACnB,EAAKG,MAAMiB,UAAUpB,GACrB,EAAKG,MAAMc,cACX,EAAKd,MAAMe,QAAQlB,EAAK,EAAKG,MAAMkB,Q,EAK3CC,e,sBAAiB,sBAAAjD,EAAA,sEACP,EAAK8B,MAAMoB,cADJ,uBAEP,EAAKpB,MAAMc,cAFJ,uBAGP,EAAKd,MAAMe,QAAQ,EAAKf,MAAMH,IAAK,EAAKG,MAAMkB,MAHvC,2C,EAOjBG,e,sBAAiB,sBAAAnD,EAAA,yDACW,IAApB,EAAK8B,MAAMkB,KADF,gCAEH,EAAKlB,MAAMsB,cAFR,uBAGH,EAAKtB,MAAMc,cAHR,uBAIH,EAAKd,MAAMe,QAAQ,EAAKf,MAAMH,IAAK,EAAKG,MAAMkB,MAJ3C,2C,uDAQP,IAAD,OAEL,OACI,yBAAK/D,UAAU,QACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,CACIA,UAAS,cAA4B,QAAnBS,KAAKoC,MAAMH,IAAgB,cAAgB,IAC7DlC,QAAS,kBAAM,EAAKqD,gBAAgB,SAFxC,gBAGA,kBAAC,IAAD,CACI7D,UAAS,cAA4B,SAAnBS,KAAKoC,MAAMH,IAAiB,cAAgB,IAC9DlC,QAAS,kBAAM,EAAKqD,gBAAgB,UAFxC,gBAGA,kBAAC,IAAD,CACI7D,UAAS,cAA4B,UAAnBS,KAAKoC,MAAMH,IAAkB,cAAgB,IAC/DlC,QAAS,kBAAM,EAAKqD,gBAAgB,WAFxC,gBAGA,kBAAC,IAAD,CACI7D,UAAS,cAA4B,QAAnBS,KAAKoC,MAAMH,IAAgB,cAAgB,IAC7DlC,QAAS,kBAAM,EAAKqD,gBAAgB,SAFxC,gBAGA,kBAAC,IAAD,CACI7D,UAAS,cAA4B,QAAnBS,KAAKoC,MAAMH,IAAgB,cAAgB,IAC7DlC,QAAS,kBAAM,EAAKqD,gBAAgB,SAFxC,iBAIHO,MAAMC,QAAQ5D,KAAKoC,MAAMtB,MAAQ,kBAAC,EAAD,CAAUA,KAAMd,KAAKoC,MAAMtB,OAAW,KAC5C,IAA3Bd,KAAKoC,MAAMtB,KAAKuB,OACb,yBAAK9C,UAAU,QACX,4BAAQQ,QAAS,kBAAM,EAAK0D,mBAA5B,UACA,4BAAQ1D,QAAS,kBAAM,EAAKwD,mBAA5B,WACK,U,GA1DVtD,IAAMC,WAgEV2D,eCpEqB,SAACC,EAAOC,GAAR,MAAsB,CACtD9B,IAAK6B,EAAM7B,IACXqB,KAAMQ,EAAMR,KACZxC,KAAMgD,EAAMhD,SAeuB,SAACT,GACpC,MAAO,CACHgD,UAAW,SAACpB,GACR5B,ELvBa,SAAC4B,GAAD,MAAU,CAC/BpB,KAAM,aACNoB,OKqBiBoB,CAAUpB,KAEvBkB,QAAS,SAAClB,EAAKqB,GACXjD,ELpBW,WAA4B,IAA3B4B,EAA0B,uDAApB,MAAOqB,EAAa,uDAAN,EACxC,8CAAO,WAAgBjD,GAAhB,eAAAC,EAAA,6DACCC,EAAM,6CACG,IAAT+C,IACA/C,GAAG,gBAAa+C,IAER,QAARrB,IACA1B,GAAG,eAAY0B,IAEnBC,QAAQC,IAAI5B,GART,kBASIC,MAAMD,GACRE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIP,EAAS,CAAEQ,KAAM,WAAYC,KAAMF,EAAOE,UACzDC,OAAM,kBAAMC,MAAM,4CAZpB,2CAAP,sDKmBiBmC,CAAQlB,EAAKqB,KAE1BJ,YAAa,WACT7C,ELMsB,CAC9BQ,KAAM,kBKLF2C,YAAa,WACTnD,ELQsB,CAC9BQ,KAAM,mBKPF6C,YAAa,WACTrD,ELUsB,CAC9BQ,KAAM,sBIwBKgD,CAAuDb,GE9DhEgB,G,kNACFf,kBAAoB,WAChB,EAAKb,MAAMc,cACX,EAAKd,MAAM6B,cAAc,EAAK7B,MAAM8B,MAAMC,OAAO3B,K,uDAIjD,OAA+B,IAA3BxC,KAAKoC,MAAMtB,KAAKuB,QAA+C,IAA/BrC,KAAKoC,MAAMgC,SAAS/B,OAC7C,kBAAC,EAAD,OAEXH,QAAQC,IAAInC,KAAKoC,OAEb,yBAAK7C,UAAU,QACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,SAASS,KAAKoC,MAAMtB,KAAK8B,OACxC,yBAAKrD,UAAU,WACX,6DAAa2B,EAAQlB,KAAKoC,MAAMtB,KAAKuD,aACrC,8BAAM,kBAAC,IAAD,CAAM7E,GAAE,gBAAWQ,KAAKoC,MAAMtB,KAAK2B,OAAOC,YAA1C,yBAA6D1C,KAAKoC,MAAMtB,KAAK2B,OAAOC,aAC1F,wCAAU1C,KAAKoC,MAAMtB,KAAKgC,aAA1B,uBAEJ,yBAAKvD,UAAU,UAAU+E,wBAAyB,CAAEC,OAAQvE,KAAKoC,MAAMtB,KAAK0D,YAEhF,yBAAKjF,UAAU,gBACX,4BAAQA,UAAU,gBAAlB,UAAqCS,KAAKoC,MAAMtB,KAAK2D,QAAQpC,QAA7D,gBAECrC,KAAKoC,MAAMtB,KAAK2D,QAAQnC,KAAI,SAAAjD,GAAC,OAC1B,yBAAKE,UAAU,SACX,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAAMC,GAAE,gBAAWH,EAAEoD,OAAOC,YAAa,yBAAKjD,IAAKJ,EAAEoD,OAAOE,WAAYhD,IAAG,UAAKN,EAAEoD,OAAOC,cACzF,kBAAC,IAAD,CAAMlD,GAAE,gBAAWH,EAAEoD,OAAOC,YAA5B,UAA6CrD,EAAEoD,OAAOC,YACtD,2DAAcxB,EAAQ7B,EAAEgF,cAE5B,yBAAK9E,UAAU,gBAAgB+E,wBAAyB,CAAEC,OAAQlF,EAAEmF,iBAKpF,yBAAKjF,UAAU,WACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aACX,gDACA,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAMC,GAAE,gBAAWQ,KAAKoC,MAAMgC,SAAS1B,YACnC,yBAAKjD,IAAG,UAAKO,KAAKoC,MAAMgC,SAASzB,YAAchD,IAAG,UAAKK,KAAKoC,MAAMgC,SAAS1B,aAC3E,wCAAU1C,KAAKoC,MAAMgC,SAAS1B,cAGtC,yBAAKnD,UAAU,SAAf,4BAA8BS,KAAKoC,MAAMgC,SAASM,QAClD,yBAAKnF,UAAU,iBAAf,wCAAwC2B,EAAQlB,KAAKoC,MAAMgC,SAASC,cAGxE,yBAAK9E,UAAU,gBACX,8EACA,yBAAKA,UAAU,QAEVS,KAAKoC,MAAMgC,SAASO,cAAcrC,KAAI,SAAAjD,GAAC,OACpC,yBAAKE,UAAU,QACX,kBAAC,IAAD,CAAMK,KAAI,gBAAWP,EAAEmD,KAAvB,UAAiCnD,EAAEuD,sB,GA1DxD3C,IAAMC,YAsEV2D,eDtEqB,SAACC,EAAOC,GAAR,MAAsB,CACtDjD,KAAMgD,EAAMhD,KACZsD,SAAUN,EAAMM,aA8BmB,SAAC/D,GACpC,MAAO,CACH4D,cAAe,SAACzB,GACZnC,ELMiB,SAACmC,GAC1B,8CAAO,WAAgBnC,GAAhB,eAAAC,EAAA,6DACCC,EAAM,oCAAsCiC,EAD7C,kBAEIhC,MAAMD,GACRE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFJ,MAAM,mCAAqCI,EAAOE,KAAK2B,OAAOC,WACzDjC,MAAK,SAAAmE,GAAG,OAAIA,EAAIjE,UAChBF,MAAK,SAAAmE,GAAG,OAAIvE,EAAS,CAAEQ,KAAM,kBAAmBC,KAAMF,EAAOE,KAAMsD,SAAUQ,EAAI9D,aAEzFC,OAAM,kBAAMC,MAAM,4CATpB,2CAAP,sDKPiBiD,CAAczB,KAE3BU,YAAa,WACT7C,ELXsB,CAC9BQ,KAAM,kBKYFV,QAAS,SAACC,GACNC,EAASF,EAAQC,QC6BdyD,CAAuDG,GCvEhEa,G,wLAGE7E,KAAKoC,MAAMc,cACXlD,KAAKoC,MAAMjC,QAAQH,KAAKoC,MAAM8B,MAAMC,OAAO/D,Q,+BAG3C,OAAmC,IAA/BJ,KAAKoC,MAAMgC,SAAS/B,OACb,kBAAC,EAAD,OAEXH,QAAQC,IAAInC,KAAKoC,MAAMgC,UAEnB,yBAAK7E,UAAU,QACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aACX,4DACA,yBAAKA,UAAU,QACX,yBAAKE,IAAG,UAAKO,KAAKoC,MAAMgC,SAASzB,YAAcC,MAAK,UAAK5C,KAAKoC,MAAMgC,SAAS1B,aAC7E,wCAAU1C,KAAKoC,MAAMgC,SAAS1B,aAElC,yBAAKnD,UAAU,SAAf,4BAA8BS,KAAKoC,MAAMgC,SAASM,QAClD,yBAAKnF,UAAU,UAAf,UAA+B,uBAAGK,KAAI,6BAAwBI,KAAKoC,MAAMgC,SAASU,iBAAmB9E,KAAKoC,MAAMgC,SAASU,iBACzH,yBAAKvF,UAAU,iBAAf,iCAAqC2B,EAAQlB,KAAKoC,MAAMgC,SAASC,aAErE,yBAAK9E,UAAU,gBACX,8EACA,yBAAKA,UAAU,QACVS,KAAKoC,MAAMgC,SAASW,eAAezC,KAAI,SAAAjD,GAAC,OACrC,yBAAKE,UAAU,QACX,kBAAC,IAAD,CAAMC,GAAE,gBAAWH,EAAEmD,KAAOnD,EAAEuD,aAI9C,yBAAKrD,UAAU,gBACX,8EACA,yBAAKA,UAAU,QACVS,KAAKoC,MAAMgC,SAASO,cAAcrC,KAAI,SAAAjD,GAAC,OACpC,yBAAKE,UAAU,QACX,kBAAC,IAAD,CAAMC,GAAE,gBAAWH,EAAEmD,KAAOnD,EAAEuD,oB,GAtC/C3C,IAAMC,YAgDV2D,eF1CqB,SAACC,EAAOC,GAAR,MAAsB,CACtDK,SAAUN,EAAMM,aAwCmB,SAAC/D,GACpC,MAAO,CACH6C,YAAa,WACT7C,ELtBsB,CAC9BQ,KAAM,kBKuBFV,QAAS,SAACC,GACNC,EAASF,EAAQC,QELdyD,CAAuDgB,GC/BvDG,E,uKAfX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnC,IACjC,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,QAAQC,UAAW,kBAAM,kBAAC,IAAD,CAAU3F,GAAG,SACxD,kBAAC,IAAD,CAAOyF,OAAK,EAACC,KAAK,QAAQC,UAAW,kBAAM,kBAAC,IAAD,CAAU3F,GAAG,SACxD,kBAAC,IAAD,CAAO0F,KAAK,YAAYC,UAAWnB,IACnC,kBAAC,IAAD,CAAOkB,KAAK,cAAcC,UAAWN,U,GAX7B5E,IAAMC,W,QCPlBkF,EAAe,CACjBnD,IAAK,MACLqB,KAAM,EACNxC,KAAM,GACNsD,SAAU,IAwCCiB,EArCC,WAAmC,IAAlCvB,EAAiC,uDAAzBsB,EAAcE,EAAW,uCAC9C,OAAQA,EAAOzE,MACX,IAAK,aACD,OAAO0E,OAAOC,OAAO,GAAI1B,EAAO,CAC5B7B,IAAKqD,EAAOrD,MAEpB,IAAK,WACD,OAAOsD,OAAOC,OAAO,GAAI1B,EAAO,CAC5BhD,KAAMwE,EAAOxE,OAErB,IAAK,WACD,OAAOyE,OAAOC,OAAO,GAAI1B,EAAO,CAC5BM,SAAUkB,EAAOxE,OAEzB,IAAK,eACD,OAAOyE,OAAOC,OAAO,GAAI1B,EAAO,CAC5BhD,KAAM,GACNsD,SAAU,KAElB,IAAK,gBACD,OAAOmB,OAAOC,OAAO,GAAI1B,EAAO,CAC5BR,KAAMQ,EAAMR,KAAO,IAE3B,IAAK,gBACD,OAAOiC,OAAOC,OAAO,GAAI1B,EAAO,CAC5BR,KAAMQ,EAAMR,KAAO,IAE3B,IAAK,kBACD,OAAOiC,OAAOC,OAAO,GAAI1B,EAAO,CAC5BhD,KAAMwE,EAAOxE,KACbsD,SAAUkB,EAAOlB,WAEzB,QACI,OAAON,ICxCnB,SAAS2B,EAAsBC,GAC3B,OAAO,gBAAGrF,EAAH,EAAGA,SAAUsF,EAAb,EAAaA,SAAb,OAA4B,SAAAC,GAAI,OAAI,SAAAN,GACvC,MAAsB,oBAAXA,EACAA,EAAOjF,EAAUsF,EAAUD,GAG/BE,EAAKN,MAIpB,IAAMO,EAAQJ,IACdI,EAAMC,kBAAoBL,EAEXI,QCJXE,EAAQC,YACRX,EACAY,YAAgBJ,IAGpBK,IAASC,OACL,kBAAC,IAAD,CAAUJ,MAAOA,GACb,kBAAC,EAAD,OAEJK,SAASC,eAAe,W","file":"static/js/main.37d5864d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cnode.2380f055.svg\";","import React from 'react';\r\nimport logo from '../../asset/images/cnode.svg';\r\nimport './index.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n    handleAbout = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='header'>\r\n                <div className='logo'>\r\n                    <Link to='/'>\r\n                        <img src={logo} alt='logo' />\r\n                    </Link>\r\n                </div>\r\n                <div className=\"navbar\">\r\n                    <Link to='/'>首页</Link>\r\n                    <a href='https://cnodejs.org/getstart' target='_blank' rel=\"noopener noreferrer\" >新手入门</a>\r\n                    <a href='https://cnodejs.org/api' target='_black' rel=\"noopener noreferrer\">API</a>\r\n                    <a href='/' onClick={this.handleAbout}>关于</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","//切换标签\r\nexport const changeTab = (tab) => ({\r\n    type: 'CHANGE_TAB',\r\n    tab\r\n});\r\n\r\n//获取文章\r\nexport const getPost = (tab = 'all', page = 1) => {\r\n    return async function (dispatch) {\r\n        let url = 'https://cnodejs.org/api/v1/topics?limit=20';\r\n        if (page !== 1) {\r\n            url += `&page=${page}`\r\n        }\r\n        if (tab !== 'all') {\r\n            url += `&tab=${tab}`\r\n        }\r\n        console.log(url);\r\n        return fetch(url)\r\n            .then(response => response.json())\r\n            .then(result => dispatch({ type: 'GET_POST', data: result.data }))\r\n            .catch(() => alert('数据加载失败'));\r\n    }\r\n};\r\n\r\n//获取用户信息\r\nexport const getUser = (name) => {\r\n    return async function (dispatch) {\r\n        let url = 'https://cnodejs.org/api/v1/user/' + name;\r\n        return fetch(url)\r\n            .then(response => response.json())\r\n            .then(result => dispatch({type: 'GET_USER', data: result.data}))\r\n            .catch(() => alert('数据加载失败'));\r\n    }\r\n};\r\n\r\n//重置数据\r\nexport const refreshData = () => ({\r\n    type: 'REFRESH_DATA'\r\n});\r\n\r\n//下一页\r\nexport const getNextPage = () => ({\r\n    type: 'GET_NEXT_PAGE'\r\n});\r\n\r\n//上一页\r\nexport const getPrevPage = () => ({\r\n    type: 'GET_PREV_PAGE'\r\n});\r\n\r\nexport const getPostDetail = (id) => {\r\n    return async function (dispatch) {\r\n        let url = 'https://cnodejs.org/api/v1/topic/' + id;\r\n        return fetch(url)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                fetch('https://cnodejs.org/api/v1/user/' + result.data.author.loginname)\r\n                    .then(res => res.json())\r\n                    .then(res => dispatch({ type: 'GET_POST_DETAIL', data: result.data, userData: res.data }))\r\n            })\r\n            .catch(() => alert('数据加载失败'));\r\n    }\r\n};","import React from 'react';\r\nimport './index.scss';\r\n\r\nclass Loading extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='loading'></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","//将时间转换成形如刚刚、x分钟前、x小时前、x天前、x月前、x年前的字符串\r\nconst convert = (time) => {\r\n    let diff = Date.now() - new Date(time);\r\n    let d = new Date(diff);\r\n    return diff <= 60000 ? '刚刚' :  //60秒内\r\n        diff <= 3600000 ? `${parseInt(diff / 60000)}分钟前` :  //60分钟内\r\n        diff <= 86400000 ? `${parseInt(diff / 3600000)}小时前` :  //24小时内\r\n        d.getFullYear() > 1970 ? `${d.getFullYear() - 1970}年前` :\r\n        d.getMonth() ? `${d.getMonth()}个月前` : `${d.getDate() - 1}天前`;\r\n}\r\n\r\nexport default convert;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\nimport Loading from '../../Loading';\r\nimport convert from '../../../utils/convertTime';\r\n\r\nclass ListItem extends React.Component {\r\n    getText = (obj) => {\r\n        if (obj.top) {\r\n            return '置顶';\r\n        }\r\n        if (obj.good) {\r\n            return '精华';\r\n        }\r\n        switch (obj.tab) {\r\n            case 'ask':\r\n                return '问答';\r\n            case 'share':\r\n                return '分享';\r\n            case 'job':\r\n                return '招聘';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        //等待数据加载\r\n        if (this.props.data.length === 0) {\r\n            return (\r\n                <Loading />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='list-item'>\r\n                <div className='list'>\r\n                    {this.props.data.map(e =>\r\n                        <div className='cell' key={e.id}>\r\n                            <Link to={`/user/${e.author.loginname}`}>\r\n                                <img className='user-avatar' src={e.author.avatar_url} title={e.author.loginname} alt={e.author.loginname} />\r\n                            </Link>\r\n                            <div className='cell-left'>\r\n                                <span className='reply-count'>{e.reply_count}</span>\r\n                                <span>/</span>\r\n                                <span className='visit-count'>{e.visit_count}</span>\r\n                            </div>\r\n                            <span className={e.top || e.good ? 'put-top' : 'list-tab'}>{this.getText(e)}</span>\r\n                            <span className='title'><Link to={`/post/${e.id}`}>{e.title}</Link></span>\r\n                            <span className='time'>{convert(e.last_reply_at)}</span>\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport './index.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapStateToProps_main, mapDispatchToState_main } from '../../redux/map';\r\nimport ListItem from './ListItem';\r\n\r\nclass Main extends React.Component {\r\n\r\n    componentDidMount = async () => {\r\n        await this.props.refreshData();\r\n        await this.props.getPost();\r\n    }\r\n\r\n    //切换标签\r\n    handleChangeTab = (tab) => {\r\n        if (this.props.tab !== tab) {\r\n            this.props.changeTab(tab);\r\n            this.props.refreshData();\r\n            this.props.getPost(tab, this.props.page);\r\n        }\r\n    }\r\n\r\n    //下一页\r\n    handleNextPage = async () => {\r\n        await this.props.getNextPage();\r\n        await this.props.refreshData();\r\n        await this.props.getPost(this.props.tab, this.props.page);\r\n    }\r\n\r\n    //上一页\r\n    handlePrevPage = async () => {\r\n        if (this.props.page !== 1) {\r\n            await this.props.getPrevPage();\r\n            await this.props.refreshData();\r\n            await this.props.getPost(this.props.tab, this.props.page);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props);\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"tab\">\r\n                    <Link\r\n                        className={`item${this.props.tab === 'all' ? ' high-light' : ''}`}\r\n                        onClick={() => this.handleChangeTab('all')}>全部</Link>\r\n                    <Link\r\n                        className={`item${this.props.tab === 'good' ? ' high-light' : ''}`}\r\n                        onClick={() => this.handleChangeTab('good')}>精华</Link>\r\n                    <Link\r\n                        className={`item${this.props.tab === 'share' ? ' high-light' : ''}`}\r\n                        onClick={() => this.handleChangeTab('share')}>分享</Link>\r\n                    <Link\r\n                        className={`item${this.props.tab === 'ask' ? ' high-light' : ''}`}\r\n                        onClick={() => this.handleChangeTab('ask')}>问答</Link>\r\n                    <Link\r\n                        className={`item${this.props.tab === 'job' ? ' high-light' : ''}`}\r\n                        onClick={() => this.handleChangeTab('job')}>招聘</Link>\r\n                </div>\r\n                {Array.isArray(this.props.data) ? <ListItem data={this.props.data} /> : null}\r\n                {this.props.data.length !== 0 ?\r\n                    <div className='page'>\r\n                        <button onClick={() => this.handlePrevPage()}>{`<<Prev`}</button>\r\n                        <button onClick={() => this.handleNextPage()}>{`Next>>`}</button>\r\n                    </div> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps_main, mapDispatchToState_main)(Main);","import { changeTab, getNextPage, getPrevPage, getPost, refreshData, getPostDetail, getUser } from './actions';\r\n\r\n//mapStateToProps\r\nexport const mapStateToProps_main = (state, ownProps) => ({\r\n    tab: state.tab,\r\n    page: state.page,\r\n    data: state.data\r\n});\r\n\r\nexport const mapStateToProps_post = (state, ownProps) => ({\r\n    data: state.data,\r\n    userData: state.userData\r\n});\r\n\r\nexport const mapStateToProps_user = (state, ownProps) => ({\r\n    userData: state.userData\r\n});\r\n\r\n\r\n\r\n//mapDispatchToState\r\nexport const mapDispatchToState_main = (dispatch) => {\r\n    return {\r\n        changeTab: (tab) => {\r\n            dispatch(changeTab(tab));\r\n        },\r\n        getPost: (tab, page) => {\r\n            dispatch(getPost(tab, page));\r\n        },\r\n        refreshData: () => {\r\n            dispatch(refreshData());\r\n        },\r\n        getNextPage: () => {\r\n            dispatch(getNextPage());\r\n        },\r\n        getPrevPage: () => {\r\n            dispatch(getPrevPage());\r\n        }\r\n    }\r\n}\r\n\r\nexport const mapDispatchToState_post = (dispatch) => {\r\n    return {\r\n        getPostDetail: (id) => {\r\n            dispatch(getPostDetail(id));\r\n        },\r\n        refreshData: () => {\r\n            dispatch(refreshData());\r\n        },\r\n        getUser: (name) => {\r\n            dispatch(getUser(name))\r\n        }\r\n    };\r\n}\r\n\r\nexport const mapDispatchToState_user = (dispatch) => {\r\n    return {\r\n        refreshData: () => {\r\n            dispatch(refreshData());\r\n        },\r\n        getUser: (name) => {\r\n            dispatch(getUser(name))\r\n        }\r\n    };\r\n}","import React from 'react';\r\nimport './index.scss';\r\nimport { connect } from 'react-redux';\r\nimport { mapStateToProps_post, mapDispatchToState_post } from '../../redux/map';\r\nimport Loading from '../Loading';\r\nimport convert from '../../utils/convertTime';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Post extends React.Component {\r\n    componentDidMount = () => {\r\n        this.props.refreshData();\r\n        this.props.getPostDetail(this.props.match.params.id);\r\n        //console.log(this.props);\r\n    }\r\n    render() {\r\n        if (this.props.data.length === 0 || this.props.userData.length === 0) {\r\n            return <Loading />;\r\n        }\r\n        console.log(this.props);\r\n        return (\r\n            <div className='post'>\r\n                <div className='panel'>\r\n                    <div className='panel-top'>\r\n                        <div className='title'>{this.props.data.title}</div>\r\n                        <div className='changes'>\r\n                            <span>发布于{`${convert(this.props.data.create_at)}`}</span>\r\n                            <span><Link to={`/user/${this.props.data.author.loginname}`}>作者{`${this.props.data.author.loginname}`}</Link></span>\r\n                            <span>{`${this.props.data.visit_count}`}次浏览</span>\r\n                        </div>\r\n                        <div className='content' dangerouslySetInnerHTML={{ __html: this.props.data.content }}></div>\r\n                    </div>\r\n                    <div className='panel-bottom'>\r\n                        <header className='reply-header'>{`${this.props.data.replies.length}`}回复</header>\r\n\r\n                        {this.props.data.replies.map(e =>\r\n                            <div className='reply'>\r\n                                <div className='reply-author'>\r\n                                    <Link to={`/user/${e.author.loginname}`}><img src={e.author.avatar_url} alt={`${e.author.loginname}`} /></Link>\r\n                                    <Link to={`/user/${e.author.loginname}`}>{`${e.author.loginname}`}</Link>\r\n                                    <span>{` 回复于${convert(e.create_at)}`}</span>\r\n                                </div>\r\n                                <div className='reply-content' dangerouslySetInnerHTML={{ __html: e.content }}></div>\r\n                            </div>)}\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar'>\r\n                    <div className='panel'>\r\n                        <div className='panel-top'>\r\n                            <header>作者</header>\r\n                            <div className='info'>\r\n                                <Link to={`/user/${this.props.userData.loginname}`}>\r\n                                    <img src={`${this.props.userData.avatar_url}`} alt={`${this.props.userData.loginname}`} />\r\n                                    <span>{`${this.props.userData.loginname}`}</span>\r\n                                </Link>\r\n                            </div>\r\n                            <div className='score'>{`积分：${this.props.userData.score}`}</div>\r\n                            <div className='register-time'>{`注册时间：${convert(this.props.userData.create_at)}`}</div>\r\n                        </div>\r\n\r\n                        <div className='panel-bottom'>\r\n                            <header>作者的其他话题</header>\r\n                            <div className='list'>\r\n\r\n                                {this.props.userData.recent_topics.map(e =>\r\n                                    <div className='item'>\r\n                                        <Link href={`/post/${e.id}`}>{`${e.title}`}</Link>\r\n                                    </div>)}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps_post, mapDispatchToState_post)(Post);","import React from 'react';\r\nimport './index.scss';\r\nimport { mapDispatchToState_user, mapStateToProps_user } from '../../redux/map';\r\nimport { connect } from 'react-redux';\r\nimport Loading from '../Loading';\r\nimport convert from '../../utils/convertTime';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        //console.log(this.props)\r\n        this.props.refreshData();\r\n        this.props.getUser(this.props.match.params.name);\r\n    }\r\n    render() {\r\n        if (this.props.userData.length === 0) {\r\n            return <Loading />;\r\n        }\r\n        console.log(this.props.userData);\r\n        return (\r\n            <div className='user'>\r\n                <div className='panel'>\r\n                    <div className='panel-top'>\r\n                        <header>个人信息</header>\r\n                        <div className='info'>\r\n                            <img src={`${this.props.userData.avatar_url}`} title={`${this.props.userData.loginname}`} />\r\n                            <span>{`${this.props.userData.loginname}`}</span>\r\n                        </div>\r\n                        <div className='score'>{`积分：${this.props.userData.score}`}</div>\r\n                        <div className='github'>GitHub:<a href={`https://github.com/${this.props.userData.githubUsername}`}>{this.props.userData.githubUsername}</a></div>\r\n                        <div className='register-time'>注册时间：{convert(this.props.userData.create_at)}</div>\r\n                    </div>\r\n                    <div className='panel-middle'>\r\n                        <header>最近创建的话题</header>\r\n                        <div className='list'>\r\n                            {this.props.userData.recent_replies.map(e =>\r\n                                <div className='item'>\r\n                                    <Link to={`/post/${e.id}`}>{e.title}</Link>\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                    <div className='panel-bottom'>\r\n                        <header>最近参与的话题</header>\r\n                        <div className='list'>\r\n                            {this.props.userData.recent_topics.map(e =>\r\n                                <div className='item'>\r\n                                    <Link to={`/post/${e.id}`}>{e.title}</Link>\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps_user, mapDispatchToState_user)(User);","import React from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './component/Header';\nimport Main from './component/Main';\nimport Post from './component/Post';\nimport User from './component/User';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={Main} />\n          <Route exact path='/post' component={() => <Redirect to='/' />} />\n          <Route exact path='/user' component={() => <Redirect to='/' />} />\n          <Route path='/post/:id' component={Post} />\n          <Route path='/user/:name' component={User} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\r\n    tab: 'all',\r\n    page: 1,\r\n    data: [],\r\n    userData: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_TAB':  //切换标签\r\n            return Object.assign({}, state, {\r\n                tab: action.tab\r\n            })\r\n        case 'GET_POST':  //获取文章\r\n            return Object.assign({}, state, {\r\n                data: action.data\r\n            });\r\n        case 'GET_USER':  //获取用户信息\r\n            return Object.assign({}, state, {\r\n                userData: action.data\r\n            });\r\n        case 'REFRESH_DATA':  //重置数据\r\n            return Object.assign({}, state, {\r\n                data: [],\r\n                userData: []\r\n            });\r\n        case 'GET_NEXT_PAGE':  //下一页\r\n            return Object.assign({}, state, {\r\n                page: state.page + 1\r\n            });\r\n        case 'GET_PREV_PAGE':  //上一页\r\n            return Object.assign({}, state, {\r\n                page: state.page - 1\r\n            });\r\n        case 'GET_POST_DETAIL': //获取文章详情\r\n            return Object.assign({}, state, {\r\n                data: action.data,\r\n                userData: action.userData\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","function createThunkMiddleware(extraArgument) {\r\n    return ({ dispatch, getState }) => next => action => {\r\n        if (typeof action === 'function') {\r\n            return action(dispatch, getState, extraArgument);\r\n        }\r\n\r\n        return next(action);\r\n    };\r\n}\r\n\r\nconst thunk = createThunkMiddleware();\r\nthunk.withExtraArgument = createThunkMiddleware;\r\n\r\nexport default thunk;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './redux/reducer';\nimport thunk from './redux/thunk';\n\nlet store = createStore(\n    reducer,\n    applyMiddleware(thunk)\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
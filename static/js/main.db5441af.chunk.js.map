{"version":3,"sources":["asset/images/cnode.svg","component/Header/index.js","redux/actions.js","component/Loading/index.js","utils/convertTime.js","component/Main/ListItem/index.js","component/Main/index.js","redux/map.js","component/Post/index.js","component/User/index.js","App.js","redux/reducer.js","redux/thunk.js","index.js"],"names":["module","exports","Header","handleAbout","e","preventDefault","className","href","src","logo","alt","to","target","rel","onClick","this","React","Component","getUser","name","dispatch","a","url","fetch","then","response","json","result","type","data","catch","alert","Loading","convert","time","diff","Date","now","d","parseInt","getFullYear","getMonth","getDate","ListItem","getText","obj","top","good","tab","props","length","map","key","id","author","avatar_url","title","loginname","reply_count","visit_count","last_reply_at","Main","componentDidMount","getPost","handleChangeTab","changeTab","refreshData","page","handleNextPage","getNextPage","handlePrevPage","getPrevPage","connect","state","ownProps","console","log","Post","getPostDetail","match","params","userData","create_at","dangerouslySetInnerHTML","__html","content","replies","score","recent_topics","res","User","githubUsername","recent_replies","App","exact","path","component","initialState","reducer","action","Object","assign","createThunkMiddleware","extraArgument","getState","next","thunk","withExtraArgument","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db5441af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cnode.2380f055.svg\";","import React from 'react';\r\nimport logo from '../../asset/images/cnode.svg';\r\nimport './index.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n    handleAbout = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='header'>\r\n                <div className='logo'>\r\n                    <a href='/'>\r\n                        <img src={logo} alt='logo' />\r\n                    </a>\r\n                </div>\r\n                <div className=\"navbar\">\r\n                    <Link to='/'>首页</Link>\r\n                    <a href='https://cnodejs.org/getstart' target='_blank' rel=\"noopener noreferrer\" >新手入门</a>\r\n                    <a href='https://cnodejs.org/api' target='_black' rel=\"noopener noreferrer\">API</a>\r\n                    <a href='/' onClick={this.handleAbout}>关于</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","//切换标签\r\nexport const changeTab = (tab) => ({\r\n    type: 'CHANGE_TAB',\r\n    tab\r\n});\r\n\r\n//获取文章\r\nexport const getPost = (tab = 'all', page = 1) => {\r\n    return async function (dispatch) {\r\n        let url = 'https://cnodejs.org/api/v1/topics?limit=20';\r\n        if (page !== 1) {\r\n            url += `&page=${page}`\r\n        }\r\n        if (tab !== 'all') {\r\n            url += `&tab=${tab}`\r\n        }\r\n        console.log(url);\r\n        return fetch(url)\r\n            .then(response => response.json())\r\n            .then(result => dispatch({ type: 'GET_POST', data: result.data }))\r\n            .catch(() => alert('数据加载失败'));\r\n    }\r\n};\r\n\r\n//获取用户信息\r\nexport const getUser = (name) => {\r\n    return async function (dispatch) {\r\n        let url = 'https://cnodejs.org/api/v1/user/' + name;\r\n        return fetch(url)\r\n            .then(response => response.json())\r\n            .then(result => dispatch({type: 'GET_USER', data: result.data}))\r\n            .catch(() => alert('数据加载失败'));\r\n    }\r\n};\r\n\r\n//重置数据\r\nexport const refreshData = () => ({\r\n    type: 'REFRESH_DATA'\r\n});\r\n\r\n//下一页\r\nexport const getNextPage = () => ({\r\n    type: 'GET_NEXT_PAGE'\r\n});\r\n\r\n//上一页\r\nexport const getPrevPage = () => ({\r\n    type: 'GET_PREV_PAGE'\r\n});\r\n\r\nexport const getPostDetail = (id) => {\r\n    return async function (dispatch) {\r\n        let url = 'https://cnodejs.org/api/v1/topic/' + id;\r\n        return fetch(url)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                fetch('https://cnodejs.org/api/v1/user/' + result.data.author.loginname)\r\n                    .then(res => res.json())\r\n                    .then(res => dispatch({ type: 'GET_POST_DETAIL', data: result.data, userData: res.data }))\r\n            })\r\n            .catch(() => alert('数据加载失败'));\r\n    }\r\n};","import React from 'react';\r\nimport './index.scss';\r\n\r\nclass Loading extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='loading'></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;","//将时间转换成形如刚刚、x分钟前、x小时前、x天前、x月前、x年前的字符串\r\nconst convert = (time) => {\r\n    let diff = Date.now() - new Date(time);\r\n    let d = new Date(diff);\r\n    return diff <= 60000 ? '刚刚' :  //60秒内\r\n        diff <= 3600000 ? `${parseInt(diff / 60000)}分钟前` :  //60分钟内\r\n        diff <= 86400000 ? `${parseInt(diff / 3600000)}小时前` :  //24小时内\r\n        d.getFullYear() > 1970 ? `${d.getFullYear() - 1970}年前` :\r\n        d.getMonth() ? `${d.getMonth()}个月前` : `${d.getDate() - 1}天前`;\r\n}\r\n\r\nexport default convert;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.scss';\r\nimport Loading from '../../Loading';\r\nimport convert from '../../../utils/convertTime';\r\n\r\nclass ListItem extends React.Component {\r\n    getText = (obj) => {\r\n        if (obj.top) {\r\n            return '置顶';\r\n        }\r\n        if (obj.good) {\r\n            return '精华';\r\n        }\r\n        switch (obj.tab) {\r\n            case 'ask':\r\n                return '问答';\r\n            case 'share':\r\n                return '分享';\r\n            case 'job':\r\n                return '招聘';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //等待数据加载\r\n        if (this.props.data.length === 0) {\r\n            return (\r\n                <Loading />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className='list-item'>\r\n                <div className='list'>\r\n                    {this.props.data.map(e =>\r\n                        <div className='cell' key={e.id}>\r\n                            <a href={`/#/user/e.author.loginname`}>\r\n                                <img className='user-avatar' src={e.author.avatar_url} title={e.author.loginname} alt={e.author.loginname} />\r\n                            </a>\r\n                            <div className='cell-left'>\r\n                                <span className='reply-count'>{e.reply_count}</span>\r\n                                <span>/</span>\r\n                                <span className='visit-count'>{e.visit_count}</span>\r\n                            </div>\r\n                            <span className={e.top || e.good ? 'put-top' : 'list-tab'}>{this.getText(e)}</span>\r\n                            <span className='title'><Link to={`/post/${e.id}`}>{e.title}</Link></span>\r\n                            <span className='time'>{convert(e.last_reply_at)}</span>\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport './index.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapStateToProps_main, mapDispatchToState_main } from '../../redux/map';\r\nimport ListItem from './ListItem';\r\n\r\nclass Main extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.getPost();\r\n    }\r\n\r\n    //切换标签\r\n    handleChangeTab = (tab) => {\r\n        if (this.props.tab !== tab) {\r\n            this.props.changeTab(tab);\r\n            this.props.refreshData();\r\n            this.props.getPost(tab, this.props.page);\r\n        }\r\n    }\r\n\r\n    //下一页\r\n    handleNextPage = async () => {\r\n        await this.props.getNextPage();\r\n        await this.props.refreshData();\r\n        await this.props.getPost(this.props.tab, this.props.page);\r\n    }\r\n\r\n    //上一页\r\n    handlePrevPage = async () => {\r\n        if (this.props.page !== 1) {\r\n            await this.props.getPrevPage();\r\n            await this.props.refreshData();\r\n            await this.props.getPost(this.props.tab, this.props.page);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.props);\r\n        return (\r\n            <div className=\"main\">\r\n                <div className=\"tab\">\r\n                    <Link\r\n                        className={`item${this.props.tab === 'all' ? ' high-light' : ''}`}\r\n                        onClick={() => this.handleChangeTab('all')}>全部</Link>\r\n                    <Link\r\n                        className={`item${this.props.tab === 'good' ? ' high-light' : ''}`}\r\n                        onClick={() => this.handleChangeTab('good')}>精华</Link>\r\n                    <Link\r\n                        className={`item${this.props.tab === 'share' ? ' high-light' : ''}`}\r\n                        onClick={() => this.handleChangeTab('share')}>分享</Link>\r\n                    <Link\r\n                        className={`item${this.props.tab === 'ask' ? ' high-light' : ''}`}\r\n                        onClick={() => this.handleChangeTab('ask')}>问答</Link>\r\n                    <Link\r\n                        className={`item${this.props.tab === 'job' ? ' high-light' : ''}`}\r\n                        onClick={() => this.handleChangeTab('job')}>招聘</Link>\r\n                </div>\r\n                <ListItem data={this.props.data} />\r\n                {this.props.data.length !== 0 ?\r\n                    <div className='page'>\r\n                        <button onClick={() => this.handlePrevPage()}>{`<<Prev`}</button>\r\n                        <button onClick={() => this.handleNextPage()}>{`Next>>`}</button>\r\n                    </div> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps_main, mapDispatchToState_main)(Main);","import { changeTab, getNextPage, getPrevPage, getPost, refreshData, getPostDetail, getUser } from './actions';\r\n\r\n//mapStateToProps\r\nexport const mapStateToProps_main = (state, ownProps) => ({\r\n    tab: state.tab,\r\n    page: state.page,\r\n    data: state.data\r\n});\r\n\r\nexport const mapStateToProps_post = (state, ownProps) => ({\r\n    data: state.data,\r\n    userData: state.userData\r\n});\r\n\r\nexport const mapStateToProps_user = (state, ownProps) => ({\r\n    userData: state.userData\r\n});\r\n\r\n\r\n\r\n//mapDispatchToState\r\nexport const mapDispatchToState_main = (dispatch) => {\r\n    return {\r\n        changeTab: (tab) => {\r\n            dispatch(changeTab(tab));\r\n        },\r\n        getPost: (tab, page) => {\r\n            dispatch(getPost(tab, page));\r\n        },\r\n        refreshData: () => {\r\n            dispatch(refreshData());\r\n        },\r\n        getNextPage: () => {\r\n            dispatch(getNextPage());\r\n        },\r\n        getPrevPage: () => {\r\n            dispatch(getPrevPage());\r\n        }\r\n    }\r\n}\r\n\r\nexport const mapDispatchToState_post = (dispatch) => {\r\n    return {\r\n        getPostDetail: (id) => {\r\n            dispatch(getPostDetail(id));\r\n        },\r\n        refreshData: () => {\r\n            dispatch(refreshData());\r\n        },\r\n        getUser: (name) => {\r\n            dispatch(getUser(name))\r\n        }\r\n    };\r\n}\r\n\r\nexport const mapDispatchToState_user = (dispatch) => {\r\n    return {\r\n        refreshData: () => {\r\n            dispatch(refreshData());\r\n        },\r\n        getUser: (name) => {\r\n            dispatch(getUser(name))\r\n        }\r\n    };\r\n}","import React from 'react';\r\nimport './index.scss';\r\nimport { connect } from 'react-redux';\r\nimport { mapStateToProps_post, mapDispatchToState_post } from '../../redux/map';\r\nimport Loading from '../Loading';\r\nimport convert from '../../utils/convertTime';\r\n\r\n\r\nclass Post extends React.Component {\r\n    componentDidMount = () => {\r\n        this.props.refreshData();\r\n        this.props.getPostDetail(this.props.match.params.id);\r\n        //console.log(this.props);\r\n    }\r\n    render() {\r\n        if (this.props.data.length === 0 || this.props.userData.length === 0) {\r\n            return <Loading />;\r\n        }\r\n        console.log(this.props);\r\n        return (\r\n            <div className='post'>\r\n                <div className='panel'>\r\n                    <div className='panel-top'>\r\n                        <div className='title'>{this.props.data.title}</div>\r\n                        <div className='changes'>\r\n                            <span>发布于{`${convert(this.props.data.create_at)}`}</span>\r\n                            <span><a href={`/#/user/${this.props.data.author.loginname}`}>作者{`${this.props.data.author.loginname}`}</a></span>\r\n                            <span>{`${this.props.data.visit_count}`}次浏览</span>\r\n                        </div>\r\n                        <div className='content' dangerouslySetInnerHTML={{ __html: this.props.data.content }}></div>\r\n                    </div>\r\n                    <div className='panel-bottom'>\r\n                        <header className='reply-header'>{`${this.props.data.replies.length}`}回复</header>\r\n\r\n                        {this.props.data.replies.map(e =>\r\n                            <div className='reply'>\r\n                                <div className='reply-author'>\r\n                                    <a href={`/#/user/${e.author.loginname}`}><img src={e.author.avatar_url} alt={`${e.author.loginname}`} /></a>\r\n                                    <a href={`/#/user/${e.author.loginname}`}>{`${e.author.loginname}`}</a>\r\n                                    <span>{` 回复于${convert(e.create_at)}`}</span>\r\n                                </div>\r\n                                <div className='reply-content' dangerouslySetInnerHTML={{ __html: e.content }}></div>\r\n                            </div>)}\r\n\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar'>\r\n                    <div className='panel'>\r\n                        <div className='panel-top'>\r\n                            <header>作者</header>\r\n                            <div className='info'>\r\n                                <a href={`/#/user/${this.props.userData.loginname}`}>\r\n                                    <img src={`${this.props.userData.avatar_url}`} alt={`${this.props.userData.loginname}`} />\r\n                                    <span>{`${this.props.userData.loginname}`}</span>\r\n                                </a>\r\n                            </div>\r\n                            <div className='score'>{`积分：${this.props.userData.score}`}</div>\r\n                            <div className='register-time'>{`注册时间：${convert(this.props.userData.create_at)}`}</div>\r\n                        </div>\r\n\r\n                        <div className='panel-bottom'>\r\n                            <header>作者的其他话题</header>\r\n                            <div className='list'>\r\n\r\n                                {this.props.userData.recent_topics.map(e =>\r\n                                    <div className='item'>\r\n                                        <a href={`/#/post/${e.id}`}>{`${e.title}`}</a>\r\n                                    </div>)}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps_post, mapDispatchToState_post)(Post);","import React from 'react';\r\nimport './index.scss';\r\nimport { mapDispatchToState_user, mapStateToProps_user } from '../../redux/map';\r\nimport { connect } from 'react-redux';\r\nimport Loading from '../Loading';\r\nimport convert from '../../utils/convertTime';\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        //console.log(this.props)\r\n        this.props.refreshData();\r\n        this.props.getUser(this.props.match.params.name);\r\n    }\r\n    render() {\r\n        if (this.props.userData.length === 0) {\r\n            return <Loading />;\r\n        }\r\n        console.log(this.props.userData);\r\n        return (\r\n            <div className='user'>\r\n                <div className='panel'>\r\n                    <div className='panel-top'>\r\n                        <header>个人信息</header>\r\n                        <div className='info'>\r\n                            <img src={`${this.props.userData.avatar_url}`} title={`${this.props.userData.loginname}`} />\r\n                            <span>{`${this.props.userData.loginname}`}</span>\r\n                        </div>\r\n                        <div className='score'>{`积分：${this.props.userData.score}`}</div>\r\n                        <div className='github'>GitHub:<a href={`https://github.com/${this.props.userData.githubUsername}`}>{this.props.userData.githubUsername}</a></div>\r\n                        <div className='register-time'>注册时间：{convert(this.props.userData.create_at)}</div>\r\n                    </div>\r\n                    <div className='panel-middle'>\r\n                        <header>最近创建的话题</header>\r\n                        <div className='list'>\r\n                            {this.props.userData.recent_replies.map(e =>\r\n                                <div className='item'>\r\n                                    <a href={`/#/post/${e.id}`}>{e.title}</a>\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                    <div className='panel-bottom'>\r\n                        <header>最近参与的话题</header>\r\n                        <div className='list'>\r\n                            {this.props.userData.recent_topics.map(e =>\r\n                                <div className='item'>\r\n                                    <a href={`/#/post/${e.id}`}>{e.title}</a>\r\n                                </div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps_user, mapDispatchToState_user)(User);","import React from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './component/Header';\nimport Main from './component/Main';\nimport Post from './component/Post';\nimport User from './component/User';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={Main} />\n          <Route exact path='/post' component={() => <Redirect to='/' />} />\n          <Route exact path='/user' component={() => <Redirect to='/' />} />\n          <Route path='/post/:id' component={Post} />\n          <Route path='/user/:name' component={User} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","const initialState = {\r\n    tab: 'all',\r\n    page: 1,\r\n    data: [],\r\n    userData: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_TAB':  //切换标签\r\n            return Object.assign({}, state, {\r\n                tab: action.tab\r\n            })\r\n        case 'GET_POST':  //获取文章\r\n            return Object.assign({}, state, {\r\n                data: action.data\r\n            });\r\n        case 'GET_USER':  //获取用户信息\r\n            return Object.assign({}, state, {\r\n                userData: action.data\r\n            });\r\n        case 'REFRESH_DATA':  //重置数据\r\n            return Object.assign({}, state, {\r\n                data: [],\r\n                userData: []\r\n            });\r\n        case 'GET_NEXT_PAGE':  //下一页\r\n            return Object.assign({}, state, {\r\n                page: state.page + 1\r\n            });\r\n        case 'GET_PREV_PAGE':  //上一页\r\n            return Object.assign({}, state, {\r\n                page: state.page - 1\r\n            });\r\n        case 'GET_POST_DETAIL': //获取文章详情\r\n            return Object.assign({}, state, {\r\n                data: action.data,\r\n                userData: action.userData\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","function createThunkMiddleware(extraArgument) {\r\n    return ({ dispatch, getState }) => next => action => {\r\n        if (typeof action === 'function') {\r\n            return action(dispatch, getState, extraArgument);\r\n        }\r\n\r\n        return next(action);\r\n    };\r\n}\r\n\r\nconst thunk = createThunkMiddleware();\r\nthunk.withExtraArgument = createThunkMiddleware;\r\n\r\nexport default thunk;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './redux/reducer';\nimport thunk from './redux/thunk';\n\nlet store = createStore(\n    reducer,\n    applyMiddleware(thunk)\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}